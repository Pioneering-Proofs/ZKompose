export const PLAYERS_ABI = [
  {
    abi: [
      { type: "constructor", inputs: [], stateMutability: "nonpayable" },
      {
        type: "function",
        name: "approve",
        inputs: [
          { name: "to", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "balanceOf",
        inputs: [{ name: "owner", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "costOfPack",
        inputs: [
          { name: "tier", type: "uint8", internalType: "enum IPlayers.Tier" },
        ],
        outputs: [{ name: "cost", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
      },
      {
        type: "function",
        name: "currentPackId",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "getApproved",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "isApprovedForAll",
        inputs: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "operator", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "mintPlayer",
        inputs: [
          { name: "tokenId", type: "uint256", internalType: "uint256" },
          { name: "cid", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [],
        stateMutability: "payable",
      },
      {
        type: "function",
        name: "name",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "ownerOf",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "packRequests",
        inputs: [{ name: "packId", type: "uint256", internalType: "uint256" }],
        outputs: [
          {
            name: "",
            type: "tuple",
            internalType: "struct Players.PackRequest",
            components: [
              {
                name: "tier",
                type: "uint8",
                internalType: "enum IPlayers.Tier",
              },
              { name: "timestamp", type: "uint40", internalType: "uint40" },
              { name: "requester", type: "address", internalType: "address" },
            ],
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "pubKeys",
        inputs: [{ name: "holder", type: "address", internalType: "address" }],
        outputs: [
          {
            name: "",
            type: "tuple",
            internalType: "struct IPlayers.Secp256k1PubKey",
            components: [
              { name: "x", type: "uint256", internalType: "uint256" },
              { name: "y", type: "uint256", internalType: "uint256" },
            ],
          },
        ],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "requestPack",
        inputs: [
          {
            name: "tier",
            type: "uint8",
            internalType: "enum IPlayers.Tier"
          },
          {
            name: "key",
            type: "tuple",
            internalType: "struct IPlayers.Secp256k1PubKey",
            components: [
              { name: "x", type: "uint256", internalType: "uint256" },
              { name: "y", type: "uint256", internalType: "uint256" },
            ],
          },
        ],
        outputs: [{ name: "packId", type: "uint256", internalType: "uint256" }],
        stateMutability: "payable",
      },
      {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
          { name: "from", type: "address", internalType: "address" },
          { name: "to", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
          { name: "from", type: "address", internalType: "address" },
          { name: "to", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "setApprovalForAll",
        inputs: [
          { name: "operator", type: "address", internalType: "address" },
          { name: "approved", type: "bool", internalType: "bool" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "function",
        name: "supportsInterface",
        inputs: [
          { name: "interfaceId", type: "bytes4", internalType: "bytes4" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "symbol",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "tokenByIndex",
        inputs: [{ name: "index", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "tokenOfOwnerByIndex",
        inputs: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "index", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "tokenURI",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "totalSupply",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
      },
      {
        type: "function",
        name: "transferFrom",
        inputs: [
          { name: "from", type: "address", internalType: "address" },
          { name: "to", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
      },
      {
        type: "event",
        name: "Approval",
        inputs: [
          {
            name: "owner",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "approved",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            indexed: true,
            internalType: "uint256",
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ApprovalForAll",
        inputs: [
          {
            name: "owner",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "operator",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "approved",
            type: "bool",
            indexed: false,
            internalType: "bool",
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "BatchMetadataUpdate",
        inputs: [
          {
            name: "_fromTokenId",
            type: "uint256",
            indexed: false,
            internalType: "uint256",
          },
          {
            name: "_toTokenId",
            type: "uint256",
            indexed: false,
            internalType: "uint256",
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "MetadataUpdate",
        inputs: [
          {
            name: "_tokenId",
            type: "uint256",
            indexed: false,
            internalType: "uint256",
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "PackRequested",
        inputs: [
          {
            name: "requester",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "packId",
            type: "uint256",
            indexed: true,
            internalType: "uint256",
          },
          {
            name: "tier",
            type: "uint8",
            indexed: true,
            internalType: "enum IPlayers.Tier",
          },
          {
            name: "key",
            type: "tuple",
            indexed: false,
            internalType: "struct IPlayers.Secp256k1PubKey",
            components: [
              { name: "x", type: "uint256", internalType: "uint256" },
              { name: "y", type: "uint256", internalType: "uint256" },
            ],
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "Transfer",
        inputs: [
          {
            name: "from",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            indexed: true,
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            indexed: true,
            internalType: "uint256",
          },
        ],
        anonymous: false,
      },
      {
        type: "error",
        name: "ERC721AlreadyMinted",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
      },
      { type: "error", name: "ERC721EnumerableForbiddenBatchMint", inputs: [] },
      {
        type: "error",
        name: "ERC721IncorrectOwner",
        inputs: [
          { name: "sender", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
          { name: "owner", type: "address", internalType: "address" },
        ],
      },
      {
        type: "error",
        name: "ERC721InsufficientApproval",
        inputs: [
          { name: "operator", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidApprover",
        inputs: [
          { name: "approver", type: "address", internalType: "address" },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidOperator",
        inputs: [
          { name: "operator", type: "address", internalType: "address" },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidOwner",
        inputs: [{ name: "owner", type: "address", internalType: "address" }],
      },
      {
        type: "error",
        name: "ERC721InvalidReceiver",
        inputs: [
          { name: "receiver", type: "address", internalType: "address" },
        ],
      },
      {
        type: "error",
        name: "ERC721InvalidSender",
        inputs: [{ name: "sender", type: "address", internalType: "address" }],
      },
      {
        type: "error",
        name: "ERC721NonexistentToken",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
      },
      {
        type: "error",
        name: "ERC721OutOfBoundsIndex",
        inputs: [
          { name: "owner", type: "address", internalType: "address" },
          { name: "index", type: "uint256", internalType: "uint256" },
        ],
      },
      {
        type: "error",
        name: "InsufficientFunds",
        inputs: [
          { name: "cost", type: "uint256", internalType: "uint256" },
          { name: "paid", type: "uint256", internalType: "uint256" },
        ],
      },
      { type: "error", name: "InvalidTier", inputs: [] },
    ],
    bytecode: {
      object:
        "0x60806040523461030b57604080519081016001600160401b038111828210176102215760409081526007825266506c617965727360c81b602083015280519081016001600160401b0381118282101761022157604052600381526228262960e91b602082015281516001600160401b038111610221575f54600181811c91168015610301575b602082101461020357601f811161029f575b50602092601f821160011461024057928192935f92610235575b50508160011b915f199060031b1c1916175f555b80516001600160401b03811161022157600154600181811c91168015610217575b602082101461020357601f81116101a0575b50602091601f8211600114610140579181925f92610135575b50508160011b915f199060031b1c1916176001555b60405161179d90816103108239f35b015190505f80610111565b601f1982169260015f52805f20915f5b85811061018857508360019510610170575b505050811b01600155610126565b01515f1960f88460031b161c191690555f8080610162565b91926020600181928685015181550194019201610150565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c810191602084106101f9575b601f0160051c01905b8181106101ee57506100f8565b5f81556001016101e1565b90915081906101d8565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100e6565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100b1565b601f198216935f8052805f20915f5b868110610287575083600195961061026f575b505050811b015f556100c5565b01515f1960f88460031b161c191690555f8080610262565b9192602060018192868501518155019401920161024f565b5f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c810191602084106102f7575b601f0160051c01905b8181106102ec5750610097565b5f81556001016102df565b90915081906102d6565b90607f1690610085565b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610d9c5750806306fdde0314610cfa578063081812fc14610cbd578063095ea7b314610bd157806318160ddd14610bb457806323b872dd14610b9d5780632f745c5914610b3157806342842e0e14610b085780634f6ccce714610aba5780636352211e14610a8b57806370a0823114610a68578063716a2cbc14610a4b5780638940c1f41461067757806395d89b41146105ad5780639f95073414610421578063a22cb46514610386578063b88d4fde146102fc578063c87b56dd146102c5578063d1b8b4bf1461025a578063e985e9c514610201578063f3d97ebb146101425763fbde8e531461010e575f80fd5b3461013e57602036600319011261013e57600435600581101561013e57610136602091611694565b604051908152f35b5f80fd5b3461013e57602036600319011261013e575f6040805161016181610ec5565b82815282602082015201526004355f52600d60205260405f206040519061018782610ec5565b549061019660ff83168261127d565b6020810164ffffffffff8360081c1681526001600160a01b03604083019360301c16835260405191519260058410156101ed5764ffffffffff6001600160a01b039260609585525116602084015251166040820152f35b634e487b7160e01b5f52602160045260245ffd5b3461013e57604036600319011261013e5761021a610e5f565b6001600160a01b0361022a610e75565b91165f5260056020526001600160a01b0360405f2091165f52602052602060ff60405f2054166040519015158152f35b3461013e57602036600319011261013e576001600160a01b0361027b610e5f565b5f602060405161028a81610ee1565b8281520152165f52600c6020526040805f2081516102a781610ee1565b60206001835493848452015491019081528251918252516020820152f35b3461013e57602036600319011261013e576102f86102e4600435611403565b604051918291602083526020830190610e3b565b0390f35b3461013e57608036600319011261013e57610315610e5f565b61031d610e75565b6064359167ffffffffffffffff831161013e573660238401121561013e5782600401359161034a83610f1f565b926103586040519485610efd565b808452366024828701011161013e576020815f9260246103849801838801378501015260443591611289565b005b3461013e57604036600319011261013e5761039f610e5f565b6024359081151580920361013e576001600160a01b031690811561040e57335f52600560205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b50630b61174360e31b5f5260045260245ffd5b606036600319011261013e57600435600581101561013e57604036602319011261013e5761044e81611694565b8034106105985750600b5490335f52600c60205260405f20541580610581575b610563575b60405161047f81610ec5565b610489828261127d565b6020810164ffffffffff4216815260408201338152845f52600d60205260405f2092519160058310156101ed5760ff79ffffffffffffffffffffffffffffffffffffffff00000000000065ffffffffff008654935160081b16935160301b1693169065ffffffffffff60d01b16171717905581604051602435815260443560208201527fac396625b2b0612c4945cb5922fa5f9c765c105256199665a169231e843969d560403392a4600b54905f19821461054f57600160209201600b55604051908152f35b634e487b7160e01b5f52601160045260245ffd5b335f52600c60205260405f2060243581556001604435910155610473565b50335f52600c602052600160405f2001541561046e565b62fae2d560e21b5f526004523460245260445ffd5b3461013e575f36600319011261013e576040515f6001546105cd81610f3b565b808452906001811690811561065357506001146105f5575b6102f8836102e481850382610efd565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b808210610639575090915081016020016102e46105e5565b919260018160209254838588010152019101909291610621565b60ff191660208086019190915291151560051b840190910191506102e490506105e5565b604036600319011261013e57600435805f5260026020526001600160a01b0360405f205416610a39576040516024356020820152602081526106ba604082610efd565b3315610a2657815f5260026020526001600160a01b0360405f205416801590811591826109ef575b335f52600360205260405f2060018154019055845f52600260205260405f206001600160a01b0333166001600160a01b03198254161790558433837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a41561096c57600854845f5260096020528060405f205568010000000000000000811015610907578461077c8260016107949401600855611220565b90919082549060031b91821b915f19901b1916179055565b33810361092e575b5061091b57815f52600a60205260405f209080519067ffffffffffffffff8211610907576107ca8354610f3b565b601f81116108c2575b50602090601f831160011461083a579180602094927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce796945f9261082f575b50508160011b915f199060031b1c19161790555b604051908152a1005b015190508680610812565b90601f19831691845f52815f20925f5b8181106108aa57509260019285927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce798966020989610610892575b505050811b019055610826565b01515f1960f88460031b161c19169055868080610885565b9293602060018192878601518155019501930161084a565b835f5260205f20601f840160051c810191602085106108fd575b601f0160051c01905b8181106108f257506107d3565b5f81556001016108e5565b90915081906108dc565b634e487b7160e01b5f52604160045260245ffd5b6339e3563760e11b5f525f60045260245ffd5b6109373361124c565b5f19810190811161054f57335f52600660205260405f20815f526020528460405f2055845f52600760205260405f205561079c565b3381146107945761097c8161124c565b845f52600760205260405f20548181036109bd575b50845f5260076020525f6040812055815f52600660205260405f20905f526020525f6040812055610794565b5f8381526006602090815260408083208584528252808320548484528184208190558352600790915290205585610991565b610a0e855f52600460205260405f206001600160a01b03198154169055565b815f52600360205260405f205f1981540190556106e2565b633250574960e11b5f525f60045260245ffd5b63013e9e9160e01b5f5260045260245ffd5b3461013e575f36600319011261013e576020600b54604051908152f35b3461013e57602036600319011261013e576020610136610a86610e5f565b61124c565b3461013e57602036600319011261013e576020610aa960043561170f565b6001600160a01b0360405191168152f35b3461013e57602036600319011261013e57600435600854811015610af257610ae3602091611220565b90549060031b1c604051908152f35b63295f44f760e21b5f525f60045260245260445ffd5b3461013e57610384610b1936610e8b565b9060405192610b29602085610efd565b5f8452611289565b3461013e57604036600319011261013e57610b4a610e5f565b6001600160a01b0360243591610b5f8161124c565b831015610b8757165f52600660205260405f20905f52602052602060405f2054604051908152f35b63295f44f760e21b5f521660045260245260445ffd5b3461013e57610384610bae36610e8b565b91610f73565b3461013e575f36600319011261013e576020600854604051908152f35b3461013e57604036600319011261013e57610bea610e5f565b602435610bf68161170f565b33151580610caa575b80610c77575b610c645781906001600160a01b0380851691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f5260046020526001600160a01b0360405f2091166001600160a01b03198254161790555f80f35b63a9fbf51f60e01b5f523360045260245ffd5b506001600160a01b0381165f52600560205260405f206001600160a01b0333165f5260205260ff60405f20541615610c05565b50336001600160a01b0382161415610bff565b3461013e57602036600319011261013e57600435610cda8161170f565b505f52600460205260206001600160a01b0360405f205416604051908152f35b3461013e575f36600319011261013e576040515f8054610d1981610f3b565b80845290600181169081156106535750600114610d40576102f8836102e481850382610efd565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b808210610d82575090915081016020016102e46105e5565b919260018160209254838588010152019101909291610d6a565b3461013e57602036600319011261013e576004359063ffffffff60e01b821680920361013e57602091632483248360e11b8114908115610dde575b5015158152f35b63780e9d6360e01b811491508115610df8575b5083610dd7565b6380ac58cd60e01b811491508115610e2a575b8115610e19575b5083610df1565b6301ffc9a760e01b14905083610e12565b635b5e139f60e01b81149150610e0b565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361013e57565b602435906001600160a01b038216820361013e57565b606090600319011261013e576004356001600160a01b038116810361013e57906024356001600160a01b038116810361013e579060443590565b6060810190811067ffffffffffffffff82111761090757604052565b6040810190811067ffffffffffffffff82111761090757604052565b90601f8019910116810190811067ffffffffffffffff82111761090757604052565b67ffffffffffffffff811161090757601f01601f191660200190565b90600182811c92168015610f69575b6020831014610f5557565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610f4a565b9190916001600160a01b038316908115610a2657825f5260026020526001600160a01b0360405f205416933315158061118a575b5084158015611153575b835f52600360205260405f2060018154019055845f52600260205260405f20846001600160a01b03198254161790558484877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4156110c157600854845f5260096020528060405f205568010000000000000000811015610907578461077c8260016110429401600855611220565b82850361107a575b506001600160a01b0391501680830361106257505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b6110839061124c565b5f19810190811161054f576001600160a01b03925f52600660205260405f20815f526020528360405f2055835f52600760205260405f20555f61104a565b848314611042576110d18561124c565b845f52600760205260405f2054818103611112575b50845f5260076020525f6040812055855f52600660205260405f20905f526020525f6040812055611042565b865f52600660205260405f20825f5260205260405f2054875f52600660205260405f20825f526020528060405f20555f52600760205260405f20555f6110e6565b611172855f52600460205260405f206001600160a01b03198154169055565b855f52600360205260405f205f198154019055610fb1565b806111c9575b1561119b575f610fa7565b83856111b357637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f523360045260245260445ffd5b5033851480156111f7575b806111905750835f526004602052336001600160a01b0360405f20541614611190565b50845f52600560205260405f206001600160a01b0333165f5260205260ff60405f2054166111d4565b6008548110156112385760085f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b6001600160a01b0316801561126a575f52600360205260405f205490565b6322718ad960e21b5f525f60045260245ffd5b60058210156101ed5752565b90611295838284610f73565b803b6112a2575b50505050565b6020916112e86001600160a01b03809316956040519586948594630a85bd0160e11b86523360048701521660248501526044840152608060648401526084830190610e3b565b03815f865af15f918161137e575b5061134b57503d15611344573d61130c81610f1f565b9061131a6040519283610efd565b81523d5f602083013e5b8051908161133f5782633250574960e11b5f5260045260245ffd5b602001fd5b6060611324565b6001600160e01b03191663757a42ff60e11b0161136c57505f80808061129c565b633250574960e11b5f5260045260245ffd5b9091506020813d6020116113bb575b8161139a60209383610efd565b8101031261013e57516001600160e01b03198116810361013e57905f6112f6565b3d915061138d565b611401906020808095946040519684889551918291018487015e8401908282015f8152815193849201905e01015f815203601f198101845283610efd565b565b61140c8161170f565b50805f52600a60205260405f2060405190815f82549261142b84610f3b565b8084529360018116908115611672575060011461162e575b5061145092500382610efd565b611458611742565b80511561162857815161161e5750506114708161170f565b50611479611742565b8051909190156116085780815f927a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008110156115dd575b50806d04ee2d6d415b85acef8100000000600a9210156115c2575b662386f26fc100008110156115ae575b6305f5e10081101561159d575b61271081101561158e575b6064811015611580575b1015611575575b600a6021600184019361151185610f1f565b9461151f6040519687610efd565b80865261152e601f1991610f1f565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490811561156757600a90611539565b5050611572916113c3565b90565b6001909101906114ff565b6064600291049301926114f8565b612710600491049301926114ee565b6305f5e100600891049301926114e3565b662386f26fc10000601091049301926114d6565b6d04ee2d6d415b85acef8100000000602091049301926114c6565b604093507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000090049050600a6114ab565b5050604051611618602082610efd565b5f815290565b61157292506113c3565b50905090565b90505f9291925260205f20905f915b818310611656575050906020611450928201015f611443565b602091935080600191548385880101520191019091839261163d565b90506020925061145094915060ff191682840152151560051b8201015f611443565b60058110156101ed57806116af5750670de0b6b3a764000090565b600181036116c457506706f05b59d3b2000090565b600281036116d957506703782dace9d9000090565b600381036116ee575067016345785d8a000090565b6004036117005766b1a2bc2ec5000090565b63e142361760e01b5f5260045ffd5b805f5260026020526001600160a01b0360405f205416908115611730575090565b637e27328960e01b5f5260045260245ffd5b60405190611751604083610efd565b6007825266697066733a2f2f60c81b602083015256fea2646970667358221220ed88c966d7bbb6dae8f491e40afee88afcae9a7d8a14ec06fc028db1b0049c2564736f6c634300081a0033",
      sourceMap:
        "345:5108:2:-:0;;;;;;;;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;;;-1:-1:-1;;;345:5108:2;;;;;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;-1:-1:-1;;;345:5108:2;;;;;;-1:-1:-1;;;;;345:5108:2;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;-1:-1:-1;345:5108:2;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;-1:-1:-1;345:5108:2;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;-1:-1:-1;345:5108:2;;;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;",
      linkReferences: {},
    },
    deployedBytecode: {
      object:
        "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610d9c5750806306fdde0314610cfa578063081812fc14610cbd578063095ea7b314610bd157806318160ddd14610bb457806323b872dd14610b9d5780632f745c5914610b3157806342842e0e14610b085780634f6ccce714610aba5780636352211e14610a8b57806370a0823114610a68578063716a2cbc14610a4b5780638940c1f41461067757806395d89b41146105ad5780639f95073414610421578063a22cb46514610386578063b88d4fde146102fc578063c87b56dd146102c5578063d1b8b4bf1461025a578063e985e9c514610201578063f3d97ebb146101425763fbde8e531461010e575f80fd5b3461013e57602036600319011261013e57600435600581101561013e57610136602091611694565b604051908152f35b5f80fd5b3461013e57602036600319011261013e575f6040805161016181610ec5565b82815282602082015201526004355f52600d60205260405f206040519061018782610ec5565b549061019660ff83168261127d565b6020810164ffffffffff8360081c1681526001600160a01b03604083019360301c16835260405191519260058410156101ed5764ffffffffff6001600160a01b039260609585525116602084015251166040820152f35b634e487b7160e01b5f52602160045260245ffd5b3461013e57604036600319011261013e5761021a610e5f565b6001600160a01b0361022a610e75565b91165f5260056020526001600160a01b0360405f2091165f52602052602060ff60405f2054166040519015158152f35b3461013e57602036600319011261013e576001600160a01b0361027b610e5f565b5f602060405161028a81610ee1565b8281520152165f52600c6020526040805f2081516102a781610ee1565b60206001835493848452015491019081528251918252516020820152f35b3461013e57602036600319011261013e576102f86102e4600435611403565b604051918291602083526020830190610e3b565b0390f35b3461013e57608036600319011261013e57610315610e5f565b61031d610e75565b6064359167ffffffffffffffff831161013e573660238401121561013e5782600401359161034a83610f1f565b926103586040519485610efd565b808452366024828701011161013e576020815f9260246103849801838801378501015260443591611289565b005b3461013e57604036600319011261013e5761039f610e5f565b6024359081151580920361013e576001600160a01b031690811561040e57335f52600560205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b50630b61174360e31b5f5260045260245ffd5b606036600319011261013e57600435600581101561013e57604036602319011261013e5761044e81611694565b8034106105985750600b5490335f52600c60205260405f20541580610581575b610563575b60405161047f81610ec5565b610489828261127d565b6020810164ffffffffff4216815260408201338152845f52600d60205260405f2092519160058310156101ed5760ff79ffffffffffffffffffffffffffffffffffffffff00000000000065ffffffffff008654935160081b16935160301b1693169065ffffffffffff60d01b16171717905581604051602435815260443560208201527fac396625b2b0612c4945cb5922fa5f9c765c105256199665a169231e843969d560403392a4600b54905f19821461054f57600160209201600b55604051908152f35b634e487b7160e01b5f52601160045260245ffd5b335f52600c60205260405f2060243581556001604435910155610473565b50335f52600c602052600160405f2001541561046e565b62fae2d560e21b5f526004523460245260445ffd5b3461013e575f36600319011261013e576040515f6001546105cd81610f3b565b808452906001811690811561065357506001146105f5575b6102f8836102e481850382610efd565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b808210610639575090915081016020016102e46105e5565b919260018160209254838588010152019101909291610621565b60ff191660208086019190915291151560051b840190910191506102e490506105e5565b604036600319011261013e57600435805f5260026020526001600160a01b0360405f205416610a39576040516024356020820152602081526106ba604082610efd565b3315610a2657815f5260026020526001600160a01b0360405f205416801590811591826109ef575b335f52600360205260405f2060018154019055845f52600260205260405f206001600160a01b0333166001600160a01b03198254161790558433837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a41561096c57600854845f5260096020528060405f205568010000000000000000811015610907578461077c8260016107949401600855611220565b90919082549060031b91821b915f19901b1916179055565b33810361092e575b5061091b57815f52600a60205260405f209080519067ffffffffffffffff8211610907576107ca8354610f3b565b601f81116108c2575b50602090601f831160011461083a579180602094927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce796945f9261082f575b50508160011b915f199060031b1c19161790555b604051908152a1005b015190508680610812565b90601f19831691845f52815f20925f5b8181106108aa57509260019285927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce798966020989610610892575b505050811b019055610826565b01515f1960f88460031b161c19169055868080610885565b9293602060018192878601518155019501930161084a565b835f5260205f20601f840160051c810191602085106108fd575b601f0160051c01905b8181106108f257506107d3565b5f81556001016108e5565b90915081906108dc565b634e487b7160e01b5f52604160045260245ffd5b6339e3563760e11b5f525f60045260245ffd5b6109373361124c565b5f19810190811161054f57335f52600660205260405f20815f526020528460405f2055845f52600760205260405f205561079c565b3381146107945761097c8161124c565b845f52600760205260405f20548181036109bd575b50845f5260076020525f6040812055815f52600660205260405f20905f526020525f6040812055610794565b5f8381526006602090815260408083208584528252808320548484528184208190558352600790915290205585610991565b610a0e855f52600460205260405f206001600160a01b03198154169055565b815f52600360205260405f205f1981540190556106e2565b633250574960e11b5f525f60045260245ffd5b63013e9e9160e01b5f5260045260245ffd5b3461013e575f36600319011261013e576020600b54604051908152f35b3461013e57602036600319011261013e576020610136610a86610e5f565b61124c565b3461013e57602036600319011261013e576020610aa960043561170f565b6001600160a01b0360405191168152f35b3461013e57602036600319011261013e57600435600854811015610af257610ae3602091611220565b90549060031b1c604051908152f35b63295f44f760e21b5f525f60045260245260445ffd5b3461013e57610384610b1936610e8b565b9060405192610b29602085610efd565b5f8452611289565b3461013e57604036600319011261013e57610b4a610e5f565b6001600160a01b0360243591610b5f8161124c565b831015610b8757165f52600660205260405f20905f52602052602060405f2054604051908152f35b63295f44f760e21b5f521660045260245260445ffd5b3461013e57610384610bae36610e8b565b91610f73565b3461013e575f36600319011261013e576020600854604051908152f35b3461013e57604036600319011261013e57610bea610e5f565b602435610bf68161170f565b33151580610caa575b80610c77575b610c645781906001600160a01b0380851691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f5260046020526001600160a01b0360405f2091166001600160a01b03198254161790555f80f35b63a9fbf51f60e01b5f523360045260245ffd5b506001600160a01b0381165f52600560205260405f206001600160a01b0333165f5260205260ff60405f20541615610c05565b50336001600160a01b0382161415610bff565b3461013e57602036600319011261013e57600435610cda8161170f565b505f52600460205260206001600160a01b0360405f205416604051908152f35b3461013e575f36600319011261013e576040515f8054610d1981610f3b565b80845290600181169081156106535750600114610d40576102f8836102e481850382610efd565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b808210610d82575090915081016020016102e46105e5565b919260018160209254838588010152019101909291610d6a565b3461013e57602036600319011261013e576004359063ffffffff60e01b821680920361013e57602091632483248360e11b8114908115610dde575b5015158152f35b63780e9d6360e01b811491508115610df8575b5083610dd7565b6380ac58cd60e01b811491508115610e2a575b8115610e19575b5083610df1565b6301ffc9a760e01b14905083610e12565b635b5e139f60e01b81149150610e0b565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361013e57565b602435906001600160a01b038216820361013e57565b606090600319011261013e576004356001600160a01b038116810361013e57906024356001600160a01b038116810361013e579060443590565b6060810190811067ffffffffffffffff82111761090757604052565b6040810190811067ffffffffffffffff82111761090757604052565b90601f8019910116810190811067ffffffffffffffff82111761090757604052565b67ffffffffffffffff811161090757601f01601f191660200190565b90600182811c92168015610f69575b6020831014610f5557565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610f4a565b9190916001600160a01b038316908115610a2657825f5260026020526001600160a01b0360405f205416933315158061118a575b5084158015611153575b835f52600360205260405f2060018154019055845f52600260205260405f20846001600160a01b03198254161790558484877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4156110c157600854845f5260096020528060405f205568010000000000000000811015610907578461077c8260016110429401600855611220565b82850361107a575b506001600160a01b0391501680830361106257505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b6110839061124c565b5f19810190811161054f576001600160a01b03925f52600660205260405f20815f526020528360405f2055835f52600760205260405f20555f61104a565b848314611042576110d18561124c565b845f52600760205260405f2054818103611112575b50845f5260076020525f6040812055855f52600660205260405f20905f526020525f6040812055611042565b865f52600660205260405f20825f5260205260405f2054875f52600660205260405f20825f526020528060405f20555f52600760205260405f20555f6110e6565b611172855f52600460205260405f206001600160a01b03198154169055565b855f52600360205260405f205f198154019055610fb1565b806111c9575b1561119b575f610fa7565b83856111b357637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f523360045260245260445ffd5b5033851480156111f7575b806111905750835f526004602052336001600160a01b0360405f20541614611190565b50845f52600560205260405f206001600160a01b0333165f5260205260ff60405f2054166111d4565b6008548110156112385760085f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b6001600160a01b0316801561126a575f52600360205260405f205490565b6322718ad960e21b5f525f60045260245ffd5b60058210156101ed5752565b90611295838284610f73565b803b6112a2575b50505050565b6020916112e86001600160a01b03809316956040519586948594630a85bd0160e11b86523360048701521660248501526044840152608060648401526084830190610e3b565b03815f865af15f918161137e575b5061134b57503d15611344573d61130c81610f1f565b9061131a6040519283610efd565b81523d5f602083013e5b8051908161133f5782633250574960e11b5f5260045260245ffd5b602001fd5b6060611324565b6001600160e01b03191663757a42ff60e11b0161136c57505f80808061129c565b633250574960e11b5f5260045260245ffd5b9091506020813d6020116113bb575b8161139a60209383610efd565b8101031261013e57516001600160e01b03198116810361013e57905f6112f6565b3d915061138d565b611401906020808095946040519684889551918291018487015e8401908282015f8152815193849201905e01015f815203601f198101845283610efd565b565b61140c8161170f565b50805f52600a60205260405f2060405190815f82549261142b84610f3b565b8084529360018116908115611672575060011461162e575b5061145092500382610efd565b611458611742565b80511561162857815161161e5750506114708161170f565b50611479611742565b8051909190156116085780815f927a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008110156115dd575b50806d04ee2d6d415b85acef8100000000600a9210156115c2575b662386f26fc100008110156115ae575b6305f5e10081101561159d575b61271081101561158e575b6064811015611580575b1015611575575b600a6021600184019361151185610f1f565b9461151f6040519687610efd565b80865261152e601f1991610f1f565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490811561156757600a90611539565b5050611572916113c3565b90565b6001909101906114ff565b6064600291049301926114f8565b612710600491049301926114ee565b6305f5e100600891049301926114e3565b662386f26fc10000601091049301926114d6565b6d04ee2d6d415b85acef8100000000602091049301926114c6565b604093507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000090049050600a6114ab565b5050604051611618602082610efd565b5f815290565b61157292506113c3565b50905090565b90505f9291925260205f20905f915b818310611656575050906020611450928201015f611443565b602091935080600191548385880101520191019091839261163d565b90506020925061145094915060ff191682840152151560051b8201015f611443565b60058110156101ed57806116af5750670de0b6b3a764000090565b600181036116c457506706f05b59d3b2000090565b600281036116d957506703782dace9d9000090565b600381036116ee575067016345785d8a000090565b6004036117005766b1a2bc2ec5000090565b63e142361760e01b5f5260045ffd5b805f5260026020526001600160a01b0360405f205416908115611730575090565b637e27328960e01b5f5260045260245ffd5b60405190611751604083610efd565b6007825266697066733a2f2f60c81b602083015256fea2646970667358221220ed88c966d7bbb6dae8f491e40afee88afcae9a7d8a14ec06fc028db1b0049c2564736f6c634300081a0033",
      sourceMap:
        "345:5108:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4008:13;345:5108;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;:::i;:::-;-1:-1:-1;;;;;345:5108:2;;:::i;:::-;;;;;4039:18:34;345:5108:2;;-1:-1:-1;;;;;345:5108:2;;;4039:35:34;345:5108:2;-1:-1:-1;345:5108:2;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;-1:-1:-1;;;;;345:5108:2;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;3883:8;345:5108;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;345:5108:2;15698:22:34;;;15694:91;;735:10:41;345:5108:2;;15794:18:34;345:5108:2;;;;;;-1:-1:-1;345:5108:2;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;15855:41:34;345:5108:2;735:10:41;15855:41:34;;345:5108:2;15694:91:34;15743:31;;;;345:5108:2;15743:31:34;345:5108:2;;;;15743:31:34;345:5108:2;;;-1:-1:-1;;345:5108:2;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;2892:16;;;:::i;:::-;2922:9;;:16;2918:63;;345:5108;3001:13;345:5108;3038:10;;345:5108;;3029:8;345:5108;;;;;;3029:27;:58;;;345:5108;3025:115;;345:5108;;;;;;:::i;:::-;3186:84;;;;:::i;:::-;345:5108;3186:84;;345:5108;3229:15;345:5108;;;;3186:84;;3038:10;345:5108;;;;;3150:13;345:5108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3286:44;345:5108;3038:10;3286:44;;3001:13;345:5108;;-1:-1:-1;;345:5108:2;;;;;;;;3001:13;345:5108;;;;;;;;;;;;;;;;;;;3025:115;3038:10;345:5108;;3029:8;345:5108;;;;;;;;;;;;;;;3025:115;;3029:58;3038:10;;345:5108;;3029:8;345:5108;;3060:22;345:5108;;;3060:22;345:5108;3060:27;3029:58;;2918:63;2947:34;;;345:5108;2947:34;345:5108;;2922:9;345:5108;;;;2947:34;345:5108;;;;;;-1:-1:-1;;345:5108:2;;;;;;;2597:7:34;345:5108:2;;;;:::i;:::-;;;;;2597:7:34;345:5108:2;;;2597:7:34;;;;345:5108:2;;;;;;;;;;;;;;:::i;:::-;;;;2597:7:34;345:5108:2;;;;;;;;;;;;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;;;;;;;;;2597:7:34;345:5108:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;;;;-1:-1:-1;;345:5108:2;;;;;;;;;5799:7:34;345:5108:2;;-1:-1:-1;;;;;345:5108:2;;;;;4693:72;;345:5108;;;;;4810:21;;345:5108;;4810:21;;;345:5108;4810:21;;:::i;:::-;4782:10;10022:16:34;10018:87;;345:5108:2;;;5799:7:34;345:5108:2;;-1:-1:-1;;;;;345:5108:2;;;;;9161:18:34;;;;;9157:256;;;;345:5108:2;4782:10;345:5108;;9487:9:34;345:5108:2;;;;;;;;;;;;;;5799:7:34;345:5108:2;;;;;-1:-1:-1;;;;;4782:10:2;345:5108;-1:-1:-1;;;;;345:5108:2;;;;;;;4782:10;;9577:27:34;;345:5108:2;9577:27:34;;2703::37;;;3949:10;345:5108:2;;;;3922:15:37;345:5108:2;;;;;;;;;;;;;;;;;;;;3949:10:37;345:5108:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4782:10;3020:19:37;;3016:90;;2699:210;10180:96:34;;;345:5108:2;;;3463:10:4;345:5108:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2699:210:37;345:5108:2;;;;;;;;;;;;;;;3509:23:4;345:5108:2;;;;;;;;;;;;;;;;9487:9:34;345:5108:2;;;;;;;;;;;;;3509:23:4;345:5108:2;;;;;-1:-1:-1;345:5108:2;;;;;4810:21;;;345:5108;;;;;;;;;;;;;;;;;;;;;;;3509:23:4;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;9487:9:34;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;10180:96:34;10234:31;;;345:5108:2;10234:31:34;345:5108:2;;;;;10234:31:34;3016:90:37;3538:13;4782:10:2;3538:13:37;:::i;:::-;-1:-1:-1;;345:5108:2;;;;;;;4782:10;345:5108;;3565:12:37;345:5108:2;;;;;;;;;;;;;;;;;;3609:17:37;345:5108:2;;;;;;3016:90:37;;2699:210;4782:10:2;2803:106:37;;2699:210;2803:106;4911:15;;;:::i;:::-;345:5108:2;;;4957:17:37;345:5108:2;;;;;;5087:28:37;;;5083:323;;2803:106;345:5108:2;;;;4957:17:37;345:5108:2;;;;;;;;;;5542:12:37;345:5108:2;;;;;;;;;;;;;;;2699:210:37;;5083:323;345:5108:2;;;;5153:12:37;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4957:17:37;345:5108:2;;;;;;5083:323:37;;;9157:256:34;9319:5;;345:5108:2;;15346:15:34;345:5108:2;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;14720:662:34;9319:5;345:5108:2;;;9368:9:34;345:5108:2;;;;;;;;;;;;9157:256:34;;10018:87;10061:33;;;345:5108:2;10061:33:34;345:5108:2;;;;;10061:33:34;4693:72:2;4737:28;;;345:5108;4737:28;345:5108;;;;4737:28;345:5108;;;;;;-1:-1:-1;;345:5108:2;;;;;1497:28;345:5108;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;345:5108:2;;;;;2274:22:34;345:5108:2;;2274:22:34;:::i;:::-;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;2140:10:37;345:5108:2;2325:22:37;;;2321:101;;2438:17;345:5108:2;2438:17:37;;:::i;:::-;345:5108:2;;;;;;;;;;;;2321:101:37;1895:36;;;345:5108:2;2370:41:37;345:5108:2;;;;;;;2370:41:37;345:5108:2;;;;4873:39:34;345:5108:2;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4873:39:34;:::i;345:5108:2:-;;;;;;-1:-1:-1;;345:5108:2;;;;;;:::i;:::-;-1:-1:-1;;;;;345:5108:2;;1856:16:37;;;;:::i;:::-;1847:25;;;1843:99;;345:5108:2;;;1958:12:37;345:5108:2;;;;;;;;;;;;;;;;;;;;;1843:99:37;1895:36;;;345:5108:2;1895:36:37;345:5108:2;;;;;;;1895:36:37;345:5108:2;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;345:5108:2;;;;;2140:10:37;345:5108:2;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;:::i;:::-;;;14943:22:34;;;:::i;:::-;735:10:41;15093:18:34;;:35;;;345:5108:2;15093:69:34;;;345:5108:2;15089:142:34;;345:5108:2;;-1:-1:-1;;;;;345:5108:2;;;;;15283:28:34;345:5108:2;15283:28:34;;345:5108:2;;;;;-1:-1:-1;;;;;345:5108:2;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;15089:142:34;15189:27;;;345:5108:2;15189:27:34;735:10:41;345:5108:2;;;;15189:27:34;15093:69;345:5108:2;-1:-1:-1;;;;;345:5108:2;;;;4039:18:34;345:5108:2;;;;;-1:-1:-1;;;;;735:10:41;345:5108:2;-1:-1:-1;345:5108:2;;;;;-1:-1:-1;345:5108:2;;;15132:30:34;15093:69;;:35;735:10:41;;-1:-1:-1;;;;;345:5108:2;;15115:13:34;;15093:35;;345:5108:2;;;;;;-1:-1:-1;;345:5108:2;;;;;;3583:22:34;;;:::i;:::-;;345:5108:2;;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:5108:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2663:35:4;;;:75;;;;345:5108:2;;;;;;;2663:75:4;-1:-1:-1;;;1560:50:37;;;-1:-1:-1;1560:90:37;;;;2663:75:4;;;;;1560:90:37;-1:-1:-1;;;1698:40:34;;;-1:-1:-1;1698:104:34;;;;1560:90:37;1698:156:34;;;;1560:90:37;;;;;1698:156:34;-1:-1:-1;;;861:40:43;;-1:-1:-1;1698:156:34;;;:104;-1:-1:-1;;;1754:48:34;;;-1:-1:-1;1698:104:34;;345:5108:2;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;-1:-1:-1;;345:5108:2;;;;:::o;:::-;;;;-1:-1:-1;;;;;345:5108:2;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;345:5108:2;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;4810:21;;345:5108;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;345:5108:2;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;4143:578:34;;;;-1:-1:-1;;;;;345:5108:2;;4237:16:34;;;4233:87;;345:5108:2;4251:1:34;345:5108:2;5799:7:34;345:5108:2;;-1:-1:-1;;;;;345:5108:2;4251:1:34;345:5108:2;;;735:10:41;;9035:18:34;;9031:86;;;4143:578;9161:18;;;;;9157:256;;4143:578;345:5108:2;4251:1:34;345:5108:2;9487:9:34;345:5108:2;;;4251:1:34;345:5108:2;9427:16:34;345:5108:2;;;;;;4251:1:34;345:5108:2;5799:7:34;345:5108:2;;;4251:1:34;345:5108:2;;-1:-1:-1;;;;;345:5108:2;;;;;;;9577:27:34;;;;4251:1;9577:27;;2703::37;;;3949:10;345:5108:2;;4251:1:34;345:5108:2;3922:15:37;345:5108:2;;;;4251:1:34;345:5108:2;;;;;;;;;;;9427:16:34;345:5108:2;;;3949:10:37;345:5108:2;;:::i;:::-;3020:19:37;;;3016:90;;2699:210;3116:20;-1:-1:-1;;;;;3116:20:37;;345:5108:2;4610:21:34;;;4606:109;;4143:578;;;:::o;4606:109::-;4654:50;;;4251:1;4654:50;;345:5108:2;;;;;;4251:1:34;4654:50;3016:90:37;3538:13;;;:::i;:::-;-1:-1:-1;;345:5108:2;;;;;;;-1:-1:-1;;;;;345:5108:2;4251:1:34;345:5108:2;3565:12:37;345:5108:2;;;4251:1:34;345:5108:2;;4251:1:34;345:5108:2;;;;;4251:1:34;345:5108:2;;;4251:1:34;345:5108:2;3609:17:37;345:5108:2;;;4251:1:34;345:5108:2;;3016:90:37;;;2699:210;2803:106;;;2699:210;2803:106;4911:15;;;:::i;:::-;345:5108:2;4251:1:34;345:5108:2;4957:17:37;345:5108:2;;;4251:1:34;345:5108:2;;5087:28:37;;;5083:323;;2803:106;345:5108:2;;4251:1:34;345:5108:2;4957:17:37;345:5108:2;;4251:1:34;345:5108:2;;;;;4251:1:34;345:5108:2;5542:12:37;345:5108:2;;;4251:1:34;345:5108:2;;4251:1:34;345:5108:2;;;4251:1:34;345:5108:2;;;;2699:210:37;;5083:323;345:5108:2;4251:1:34;345:5108:2;5153:12:37;345:5108:2;;;4251:1:34;345:5108:2;;4251:1:34;345:5108:2;;;;4251:1:34;345:5108:2;;;4251:1:34;345:5108:2;5153:12:37;345:5108:2;;;4251:1:34;345:5108:2;;4251:1:34;345:5108:2;;;;;4251:1:34;345:5108:2;;4251:1:34;345:5108:2;4957:17:37;345:5108:2;;;4251:1:34;345:5108:2;;5083:323:37;;;9157:256:34;9319:5;;345:5108:2;;15346:15:34;345:5108:2;;;;;-1:-1:-1;;;;;345:5108:2;;;;;;14720:662:34;9319:5;345:5108:2;4251:1:34;345:5108:2;9368:9:34;345:5108:2;;;4251:1:34;345:5108:2;;;;;;;;9157:256:34;;9031:86;6514:127;;;9031:86;7193:39;7189:255;;9031:86;;;7189:255;7252:19;;345:5108:2;;7298:31:34;;;4251:1;7298:31;;345:5108:2;;4251:1:34;7298:31;7248:186;7375:44;;;4251:1;7375:44;735:10:41;7375:44:34;345:5108:2;;;;4251:1:34;7375:44;6514:127;735:10:41;;6552:16:34;;:52;;;;6514:127;6552:88;6514:127;6552:88;345:5108:2;;4251:1:34;345:5108:2;6034:15:34;345:5108:2;;735:10:41;-1:-1:-1;;;;;345:5108:2;4251:1:34;345:5108:2;;;6608:32:34;6514:127;;6552:52;345:5108:2;;4251:1:34;345:5108:2;4039:18:34;345:5108:2;;;4251:1:34;345:5108:2;-1:-1:-1;;;;;735:10:41;345:5108:2;4251:1:34;345:5108:2;;;;;4251:1:34;345:5108:2;;;6552:52:34;;345:5108:2;2140:10:37;345:5108:2;;;;;;2140:10:37;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;;-1:-1:-1;345:5108:2;:::o;:::-;;;;;;;;;;;;1920:208:34;-1:-1:-1;;;;;345:5108:2;2006:19:34;;2002:87;;2023:1;345:5108:2;2105:9:34;345:5108:2;;;2023:1:34;345:5108:2;;1920:208:34;:::o;2002:87::-;2048:30;;;2023:1;2048:30;2023:1;2048:30;345:5108:2;;2023:1:34;2048:30;345:5108:2;;;;;;;;:::o;4985:208:34:-;;5121:7;;;;;:::i;:::-;17034:14;;17030:664;;4985:208;;;;;:::o;17030:664::-;345:5108:2;;;-1:-1:-1;;;;;345:5108:2;;;;;;;;;;;;;;17072:71:34;;735:10:41;17072:71:34;;;345:5108:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:34;;17051:1;17072:71;;;17051:1;;17072:71;;;17030:664;-1:-1:-1;17068:616:34;;-1:-1:-1;345:5108:2;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;17051:1:34;345:5108:2;;;;;;;;17381:18:34;;;10061:33;;;;17051:1;17430:25;17072:71;345:5108:2;;17051:1:34;17430:25;17377:293;345:5108:2;17557:95:34;;345:5108:2;;;;17068:616:34;-1:-1:-1;;;;;;345:5108:2;-1:-1:-1;;;17190:51:34;17186:130;;17068:616;17030:664;;;;;;17186:130;10061:33;;;17051:1;17272:25;17072:71;345:5108:2;;17051:1:34;17272:25;17072:71;;;;345:5108:2;17072:71:34;;345:5108:2;17072:71:34;;;;;;345:5108:2;17072:71:34;;;:::i;:::-;;;345:5108:2;;;;;-1:-1:-1;;;;;;345:5108:2;;;;;;17072:71:34;;;;;;;-1:-1:-1;17072:71:34;;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;;;;;;;;;;-1:-1:-1;345:5108:2;;;4810:21;;345:5108;;;;;;:::i;:::-;:::o;1634:585:4:-;1724:22;;;:::i;:::-;;345:5108:2;-1:-1:-1;345:5108:2;1783:10:4;345:5108:2;;;-1:-1:-1;345:5108:2;;;;;-1:-1:-1;345:5108:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;1916:23:4;1912:70;;345:5108:2;;2077:95:4;;2766:22:34;;;;;:::i;:::-;;345:5108:2;;:::i;:::-;;;;;;2850:25:34;:75;;2901:18;759:17:42;-1:-1:-1;12342:17:45;12351:8;12342:17;;;12338:103;;2850:75:34;12458:17:45;;12467:8;1783:10:4;12458:17:45;;;12454:103;;2850:75:34;12583:8:45;12574:17;;;12570:103;;2850:75:34;12699:7:45;12690:16;;;12686:100;;2850:75:34;12812:7:45;12803:16;;;12799:100;;2850:75:34;12925:7:45;12916:16;;;12912:100;;2850:75:34;13029:16:45;;13025:66;;2850:75:34;1783:10:4;921:76:42;345:5108:2;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;4810:21;;345:5108;;:::i;:::-;;;;;;;921:76:42;;;1010:282;-1:-1:-1;;345:5108:2;;-1:-1:-1;;;1115:95:42;;;;345:5108:2;1115:95:42;345:5108:2;1260:10:42;;;1256:21;;1783:10:4;;1010:282:42;;1256:21;1272:5;;2878:42:34;1272:5:42;2878:42:34;:::i;:::-;1634:585:4;:::o;13025:66:45:-;345:5108:2;;;;;13025:66:45;;12912:100;12925:7;12996:1;345:5108:2;;;;12912:100:45;;;12799;12812:7;12883:1;345:5108:2;;;;12799:100:45;;;12686;12699:7;12770:1;345:5108:2;;;;12686:100:45;;;12570:103;12583:8;12656:2;345:5108:2;;;;12570:103:45;;;12454;12467:8;345:5108:2;;;;;12454:103:45;;;12338;345:5108:2;;-1:-1:-1;12351:8:45;345:5108:2;;;-1:-1:-1;1783:10:4;12338:103:45;;2850:75:34;345:5108:2;;;;;;;;:::i;:::-;-1:-1:-1;345:5108:2;;1634:585:4;:::o;2077:95::-;2131:30;;;;:::i;1912:70::-;1955:16;;;;:::o;345:5108:2:-;;;-1:-1:-1;345:5108:2;;;;;-1:-1:-1;345:5108:2;;-1:-1:-1;345:5108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3398:384;345:5108;;;;;;3478:20;;;3500:14;3507:7;3500:14;:::o;3474:301::-;345:5108;3533:21;;345:5108;;3556:16;3563:9;3556:16;:::o;3529:246::-;3599:9;3591:17;;3599:9;;3610:17;3617:10;3610:17;:::o;3587:188::-;3654:11;3646:19;;3654:11;;3667:16;3674:9;3667:16;:::o;3642:133::-;3710:11;3702:19;3710:11;;3730:10;3723:17;:::o;3698:77::-;3762:13;;;345:5108;3762:13;3710:11;345:5108;3762:13;16138:241:34;345:5108:2;-1:-1:-1;345:5108:2;5799:7:34;345:5108:2;;-1:-1:-1;;;;;345:5108:2;-1:-1:-1;345:5108:2;;;16267:19:34;;;16263:88;;16360:12;16138:241;:::o;16263:88::-;7298:31;;;-1:-1:-1;16309:31:34;;345:5108:2;;-1:-1:-1;16309:31:34;345:5108:2;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;345:5108:2;;;;:::o",
      linkReferences: {},
    },
    methodIdentifiers: {
      "approve(address,uint256)": "095ea7b3",
      "balanceOf(address)": "70a08231",
      "costOfPack(uint8)": "fbde8e53",
      "currentPackId()": "716a2cbc",
      "getApproved(uint256)": "081812fc",
      "isApprovedForAll(address,address)": "e985e9c5",
      "mintPlayer(uint256,bytes32)": "8940c1f4",
      "name()": "06fdde03",
      "ownerOf(uint256)": "6352211e",
      "packRequests(uint256)": "f3d97ebb",
      "pubKeys(address)": "d1b8b4bf",
      "requestPack(uint8,(uint256,uint256))": "9f950734",
      "safeTransferFrom(address,address,uint256)": "42842e0e",
      "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
      "setApprovalForAll(address,bool)": "a22cb465",
      "supportsInterface(bytes4)": "01ffc9a7",
      "symbol()": "95d89b41",
      "tokenByIndex(uint256)": "4f6ccce7",
      "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
      "tokenURI(uint256)": "c87b56dd",
      "totalSupply()": "18160ddd",
      "transferFrom(address,address,uint256)": "23b872dd",
    },
    rawMetadata:
      '{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721AlreadyMinted","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"}],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InvalidTier","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"uint256","name":"packId","type":"uint256"},{"indexed":true,"internalType":"enum IPlayers.Tier","name":"tier","type":"uint8"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"indexed":false,"internalType":"struct IPlayers.Secp256k1PubKey","name":"key","type":"tuple"}],"name":"PackRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPlayers.Tier","name":"tier","type":"uint8"}],"name":"costOfPack","outputs":[{"internalType":"uint256","name":"cost","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"currentPackId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes32","name":"cid","type":"bytes32"}],"name":"mintPlayer","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"packId","type":"uint256"}],"name":"packRequests","outputs":[{"components":[{"internalType":"enum IPlayers.Tier","name":"tier","type":"uint8"},{"internalType":"uint40","name":"timestamp","type":"uint40"},{"internalType":"address","name":"requester","type":"address"}],"internalType":"struct Players.PackRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"}],"name":"pubKeys","outputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct IPlayers.Secp256k1PubKey","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPlayers.Tier","name":"tier","type":"uint8"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct IPlayers.Secp256k1PubKey","name":"key","type":"tuple"}],"name":"requestPack","outputs":[{"internalType":"uint256","name":"packId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Kai Aldag","errors":{"ERC721EnumerableForbiddenBatchMint()":[{"details":"Batch mint is not allowed."}],"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can\'t be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"ERC721OutOfBoundsIndex(address,uint256)":[{"details":"An `owner`\'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}"},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"title":"Players","version":1},"userdoc":{"errors":{"ERC721AlreadyMinted(uint256)":[{"notice":"Reverted if a given token has already been minted"}],"InsufficientFunds(uint256,uint256)":[{"notice":"Reverted if a player does not have enough funds to mint a pack"}],"InvalidTier()":[{"notice":"Reverted if a player requests a pack with an invalid tier"}]},"kind":"user","methods":{"costOfPack(uint8)":{"notice":"Returns the cost of a pack"},"requestPack(uint8,(uint256,uint256))":{"notice":"Requests a pack be minted"}},"notice":"Records soccer player NFTs.","version":1}},"settings":{"compilationTarget":{"contracts/Players.sol":"Players"},"evmVersion":"cancun","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":400},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":openzeppelin/=lib/openzeppelin-contracts/",":risc0-ethereum/=lib/risc0-ethereum/",":risc0/=lib/risc0-ethereum/contracts/src/",":src/=contracts/"],"viaIR":true},"sources":{"contracts/Players.sol":{"keccak256":"0xc11bad5cef057757880c96e9f92a64abe9e9223c4b700071410afd108097a655","license":"MIT","urls":["bzz-raw://89f8621c5439f41bd40b46871748b4662138be4401e3b4f120929bb3bd8e5985","dweb:/ipfs/QmYSLxCxjkXAZKZSAdVCJEB2ZFoCvHH2ebxkwCpgFfiF6h"]},"contracts/extensions/ERC721EnumerableURI.sol":{"keccak256":"0xf2f16922df1bb7ad944491a5411f9c77131573b9ef43440776d1fe0bde99152a","license":"MIT","urls":["bzz-raw://e211cb15a7dafc6b06eaa425ce77e153cb930c7113195786a8bebcb5329f4371","dweb:/ipfs/QmXKJpieLSPiFY7nZyoy7gQwav9FZB868bCkJLXcZ4MhBE"]},"contracts/interfaces/IPlayers.sol":{"keccak256":"0x6ff8c98a6cf9bacd1518e5aa5169116e0f9495c30bd245785e031a1cf0026ba2","license":"MIT","urls":["bzz-raw://91d2afbd130b5b0979ad58a0f777ed179e6e5dc9332f76ccf140717aaedabc81","dweb:/ipfs/QmfDCnjzoEpXbubWDatVhTcXdBwmwSncNy2MRumd3k6NtX"]},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","license":"MIT","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"]},"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol":{"keccak256":"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44","license":"MIT","urls":["bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd","dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"]},"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol":{"keccak256":"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d","license":"MIT","urls":["bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b","dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"]},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7","license":"MIT","urls":["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f","dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"]},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784","license":"MIT","urls":["bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd","dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4","license":"MIT","urls":["bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7","dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49","license":"MIT","urls":["bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22","dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"keccak256":"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16","license":"MIT","urls":["bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a","dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"keccak256":"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de","license":"MIT","urls":["bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff","dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1","license":"MIT","urls":["bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02","dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","license":"MIT","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"]},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133","license":"MIT","urls":["bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8","dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","license":"MIT","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","license":"MIT","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","license":"MIT","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"]}},"version":1}',
    metadata: {
      compiler: { version: "0.8.26+commit.8a97fa7a" },
      language: "Solidity",
      output: {
        abi: [
          { inputs: [], stateMutability: "nonpayable", type: "constructor" },
          {
            inputs: [
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            type: "error",
            name: "ERC721AlreadyMinted",
          },
          {
            inputs: [],
            type: "error",
            name: "ERC721EnumerableForbiddenBatchMint",
          },
          {
            inputs: [
              { internalType: "address", name: "sender", type: "address" },
              { internalType: "uint256", name: "tokenId", type: "uint256" },
              { internalType: "address", name: "owner", type: "address" },
            ],
            type: "error",
            name: "ERC721IncorrectOwner",
          },
          {
            inputs: [
              { internalType: "address", name: "operator", type: "address" },
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            type: "error",
            name: "ERC721InsufficientApproval",
          },
          {
            inputs: [
              { internalType: "address", name: "approver", type: "address" },
            ],
            type: "error",
            name: "ERC721InvalidApprover",
          },
          {
            inputs: [
              { internalType: "address", name: "operator", type: "address" },
            ],
            type: "error",
            name: "ERC721InvalidOperator",
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
            ],
            type: "error",
            name: "ERC721InvalidOwner",
          },
          {
            inputs: [
              { internalType: "address", name: "receiver", type: "address" },
            ],
            type: "error",
            name: "ERC721InvalidReceiver",
          },
          {
            inputs: [
              { internalType: "address", name: "sender", type: "address" },
            ],
            type: "error",
            name: "ERC721InvalidSender",
          },
          {
            inputs: [
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            type: "error",
            name: "ERC721NonexistentToken",
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "uint256", name: "index", type: "uint256" },
            ],
            type: "error",
            name: "ERC721OutOfBoundsIndex",
          },
          {
            inputs: [
              { internalType: "uint256", name: "cost", type: "uint256" },
              { internalType: "uint256", name: "paid", type: "uint256" },
            ],
            type: "error",
            name: "InsufficientFunds",
          },
          { inputs: [], type: "error", name: "InvalidTier" },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
                indexed: true,
              },
              {
                internalType: "address",
                name: "approved",
                type: "address",
                indexed: true,
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
                indexed: true,
              },
            ],
            type: "event",
            name: "Approval",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
                indexed: true,
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
                indexed: true,
              },
              {
                internalType: "bool",
                name: "approved",
                type: "bool",
                indexed: false,
              },
            ],
            type: "event",
            name: "ApprovalForAll",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "_fromTokenId",
                type: "uint256",
                indexed: false,
              },
              {
                internalType: "uint256",
                name: "_toTokenId",
                type: "uint256",
                indexed: false,
              },
            ],
            type: "event",
            name: "BatchMetadataUpdate",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
                indexed: false,
              },
            ],
            type: "event",
            name: "MetadataUpdate",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "requester",
                type: "address",
                indexed: true,
              },
              {
                internalType: "uint256",
                name: "packId",
                type: "uint256",
                indexed: true,
              },
              {
                internalType: "enum IPlayers.Tier",
                name: "tier",
                type: "uint8",
                indexed: true,
              },
              {
                internalType: "struct IPlayers.Secp256k1PubKey",
                name: "key",
                type: "tuple",
                components: [
                  { internalType: "uint256", name: "x", type: "uint256" },
                  { internalType: "uint256", name: "y", type: "uint256" },
                ],
                indexed: false,
              },
            ],
            type: "event",
            name: "PackRequested",
            anonymous: false,
          },
          {
            inputs: [
              {
                internalType: "address",
                name: "from",
                type: "address",
                indexed: true,
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
                indexed: true,
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
                indexed: true,
              },
            ],
            type: "event",
            name: "Transfer",
            anonymous: false,
          },
          {
            inputs: [
              { internalType: "address", name: "to", type: "address" },
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "approve",
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
            ],
            stateMutability: "view",
            type: "function",
            name: "balanceOf",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          },
          {
            inputs: [
              {
                internalType: "enum IPlayers.Tier",
                name: "tier",
                type: "uint8",
              },
            ],
            stateMutability: "pure",
            type: "function",
            name: "costOfPack",
            outputs: [
              { internalType: "uint256", name: "cost", type: "uint256" },
            ],
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "currentPackId",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          },
          {
            inputs: [
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            stateMutability: "view",
            type: "function",
            name: "getApproved",
            outputs: [{ internalType: "address", name: "", type: "address" }],
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "operator", type: "address" },
            ],
            stateMutability: "view",
            type: "function",
            name: "isApprovedForAll",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
          },
          {
            inputs: [
              { internalType: "uint256", name: "tokenId", type: "uint256" },
              { internalType: "bytes32", name: "cid", type: "bytes32" },
            ],
            stateMutability: "payable",
            type: "function",
            name: "mintPlayer",
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "name",
            outputs: [{ internalType: "string", name: "", type: "string" }],
          },
          {
            inputs: [
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            stateMutability: "view",
            type: "function",
            name: "ownerOf",
            outputs: [{ internalType: "address", name: "", type: "address" }],
          },
          {
            inputs: [
              { internalType: "uint256", name: "packId", type: "uint256" },
            ],
            stateMutability: "view",
            type: "function",
            name: "packRequests",
            outputs: [
              {
                internalType: "struct Players.PackRequest",
                name: "",
                type: "tuple",
                components: [
                  {
                    internalType: "enum IPlayers.Tier",
                    name: "tier",
                    type: "uint8",
                  },
                  { internalType: "uint40", name: "timestamp", type: "uint40" },
                  {
                    internalType: "address",
                    name: "requester",
                    type: "address",
                  },
                ],
              },
            ],
          },
          {
            inputs: [
              { internalType: "address", name: "holder", type: "address" },
            ],
            stateMutability: "view",
            type: "function",
            name: "pubKeys",
            outputs: [
              {
                internalType: "struct IPlayers.Secp256k1PubKey",
                name: "",
                type: "tuple",
                components: [
                  { internalType: "uint256", name: "x", type: "uint256" },
                  { internalType: "uint256", name: "y", type: "uint256" },
                ],
              },
            ],
          },
          {
            inputs: [
              {
                internalType: "enum IPlayers.Tier",
                name: "tier",
                type: "uint8",
              },
              {
                internalType: "struct IPlayers.Secp256k1PubKey",
                name: "key",
                type: "tuple",
                components: [
                  { internalType: "uint256", name: "x", type: "uint256" },
                  { internalType: "uint256", name: "y", type: "uint256" },
                ],
              },
            ],
            stateMutability: "payable",
            type: "function",
            name: "requestPack",
            outputs: [
              { internalType: "uint256", name: "packId", type: "uint256" },
            ],
          },
          {
            inputs: [
              { internalType: "address", name: "from", type: "address" },
              { internalType: "address", name: "to", type: "address" },
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "safeTransferFrom",
          },
          {
            inputs: [
              { internalType: "address", name: "from", type: "address" },
              { internalType: "address", name: "to", type: "address" },
              { internalType: "uint256", name: "tokenId", type: "uint256" },
              { internalType: "bytes", name: "data", type: "bytes" },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "safeTransferFrom",
          },
          {
            inputs: [
              { internalType: "address", name: "operator", type: "address" },
              { internalType: "bool", name: "approved", type: "bool" },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "setApprovalForAll",
          },
          {
            inputs: [
              { internalType: "bytes4", name: "interfaceId", type: "bytes4" },
            ],
            stateMutability: "view",
            type: "function",
            name: "supportsInterface",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "symbol",
            outputs: [{ internalType: "string", name: "", type: "string" }],
          },
          {
            inputs: [
              { internalType: "uint256", name: "index", type: "uint256" },
            ],
            stateMutability: "view",
            type: "function",
            name: "tokenByIndex",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "uint256", name: "index", type: "uint256" },
            ],
            stateMutability: "view",
            type: "function",
            name: "tokenOfOwnerByIndex",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          },
          {
            inputs: [
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            stateMutability: "view",
            type: "function",
            name: "tokenURI",
            outputs: [{ internalType: "string", name: "", type: "string" }],
          },
          {
            inputs: [],
            stateMutability: "view",
            type: "function",
            name: "totalSupply",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          },
          {
            inputs: [
              { internalType: "address", name: "from", type: "address" },
              { internalType: "address", name: "to", type: "address" },
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            stateMutability: "nonpayable",
            type: "function",
            name: "transferFrom",
          },
        ],
        devdoc: {
          kind: "dev",
          methods: {
            "approve(address,uint256)": { details: "See {IERC721-approve}." },
            "balanceOf(address)": { details: "See {IERC721-balanceOf}." },
            "getApproved(uint256)": { details: "See {IERC721-getApproved}." },
            "isApprovedForAll(address,address)": {
              details: "See {IERC721-isApprovedForAll}.",
            },
            "name()": { details: "See {IERC721Metadata-name}." },
            "ownerOf(uint256)": { details: "See {IERC721-ownerOf}." },
            "safeTransferFrom(address,address,uint256)": {
              details: "See {IERC721-safeTransferFrom}.",
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              details: "See {IERC721-safeTransferFrom}.",
            },
            "setApprovalForAll(address,bool)": {
              details: "See {IERC721-setApprovalForAll}.",
            },
            "supportsInterface(bytes4)": {
              details: "See {IERC165-supportsInterface}",
            },
            "symbol()": { details: "See {IERC721Metadata-symbol}." },
            "tokenByIndex(uint256)": {
              details: "See {IERC721Enumerable-tokenByIndex}.",
            },
            "tokenOfOwnerByIndex(address,uint256)": {
              details: "See {IERC721Enumerable-tokenOfOwnerByIndex}.",
            },
            "tokenURI(uint256)": { details: "See {IERC721Metadata-tokenURI}." },
            "totalSupply()": {
              details: "See {IERC721Enumerable-totalSupply}.",
            },
            "transferFrom(address,address,uint256)": {
              details: "See {IERC721-transferFrom}.",
            },
          },
          version: 1,
        },
        userdoc: {
          kind: "user",
          methods: {
            "costOfPack(uint8)": { notice: "Returns the cost of a pack" },
            "requestPack(uint8,(uint256,uint256))": {
              notice: "Requests a pack be minted",
            },
          },
          version: 1,
        },
      },
      settings: {
        remappings: [
          "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
          "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
          "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts/",
          "openzeppelin/=lib/openzeppelin-contracts/",
          "risc0-ethereum/=lib/risc0-ethereum/",
          "risc0/=lib/risc0-ethereum/contracts/src/",
          "src/=contracts/",
        ],
        optimizer: { enabled: true, runs: 400 },
        metadata: { bytecodeHash: "ipfs" },
        compilationTarget: { "contracts/Players.sol": "Players" },
        evmVersion: "cancun",
        libraries: {},
        viaIR: true,
      },
      sources: {
        "contracts/Players.sol": {
          keccak256:
            "0xc11bad5cef057757880c96e9f92a64abe9e9223c4b700071410afd108097a655",
          urls: [
            "bzz-raw://89f8621c5439f41bd40b46871748b4662138be4401e3b4f120929bb3bd8e5985",
            "dweb:/ipfs/QmYSLxCxjkXAZKZSAdVCJEB2ZFoCvHH2ebxkwCpgFfiF6h",
          ],
          license: "MIT",
        },
        "contracts/extensions/ERC721EnumerableURI.sol": {
          keccak256:
            "0xf2f16922df1bb7ad944491a5411f9c77131573b9ef43440776d1fe0bde99152a",
          urls: [
            "bzz-raw://e211cb15a7dafc6b06eaa425ce77e153cb930c7113195786a8bebcb5329f4371",
            "dweb:/ipfs/QmXKJpieLSPiFY7nZyoy7gQwav9FZB868bCkJLXcZ4MhBE",
          ],
          license: "MIT",
        },
        "contracts/interfaces/IPlayers.sol": {
          keccak256:
            "0x6ff8c98a6cf9bacd1518e5aa5169116e0f9495c30bd245785e031a1cf0026ba2",
          urls: [
            "bzz-raw://91d2afbd130b5b0979ad58a0f777ed179e6e5dc9332f76ccf140717aaedabc81",
            "dweb:/ipfs/QmfDCnjzoEpXbubWDatVhTcXdBwmwSncNy2MRumd3k6NtX",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
          keccak256:
            "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
          urls: [
            "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
            "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol": {
          keccak256:
            "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
          urls: [
            "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
            "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
          keccak256:
            "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
          urls: [
            "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
            "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
          keccak256:
            "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
          urls: [
            "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
            "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
          keccak256:
            "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
          urls: [
            "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
            "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
          keccak256:
            "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
          urls: [
            "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
            "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":
        {
          keccak256:
            "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
          urls: [
            "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
            "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol":
        {
          keccak256:
            "0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16",
          urls: [
            "bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a",
            "dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol":
        {
          keccak256:
            "0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de",
          urls: [
            "bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff",
            "dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":
        {
          keccak256:
            "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
          urls: [
            "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
            "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
          keccak256:
            "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
          urls: [
            "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
            "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
          keccak256:
            "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
          urls: [
            "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
            "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
          keccak256:
            "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
          urls: [
            "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
            "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":
        {
          keccak256:
            "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
          urls: [
            "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
            "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
          keccak256:
            "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
          urls: [
            "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
            "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L",
          ],
          license: "MIT",
        },
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
          keccak256:
            "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
          urls: [
            "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
            "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT",
          ],
          license: "MIT",
        },
      },
      version: 1,
    },
    id: 2,
  },
] as const;
